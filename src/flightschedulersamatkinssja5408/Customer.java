/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flightschedulersamatkinssja5408;
import static flightschedulersamatkinssja5408.FlightSchedulerSamAtkinssja5408.connection;
import java.sql.*;
/**
 *
 * @author samatkins
 */
public class Customer {
    private String name;
    private int customerId;
    private static int numCustomers = 0;
    
    
    public Customer(String name)
    {
        try 
        {
            if(!isTableExisting()) {
                createTable();
            }
            PreparedStatement insertQuery = connection.prepareStatement(
                    "INSERT INTO Customers (name)"
                    + " VALUES (?)");
            insertQuery.setString(1, name);
            insertQuery.executeUpdate();
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
        this.name = name;
        numCustomers++;
        customerId = numCustomers;        
        
          
    }
    
    public String addToFlight(Flight flight)
    {
        String ret = "";
        
        if (flight.getSeatsOpen() > 0)
        {
            flight.addToCustomers(this);
            return (add(flight));
        }
        else
            flight.addToWaitList(this);
        return (ret);
    }
    
    private String add(Flight flight)
    {
        String ret = null;

        try 
        {
            Connection connection = DriverManager.getConnection(
            FlightSchedulerSamAtkinssja5408.URL, "java", "java");
            PreparedStatement insertQuery = connection.prepareStatement(
                    "UPDATE Customers "
                + "SET flightId = ? " 
                + "WHERE customerId = ?");
            insertQuery.setString(1, "" + flight.getFlightId());
            insertQuery.setString(2, "" + getCustomerId());
            insertQuery.execute();
            ret = flight.getStatus();
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
        return (ret);
    }

    private void createTable() throws SQLException 
    {
        PreparedStatement create = connection.prepareStatement(
                "CREATE TABLE Customers("
                        + "customerId INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1), "
                        + "name LONG VARCHAR, "
                        + "PRIMARY KEY(customerId))");
        create.execute();
    }
    
    private static boolean isTableExisting() 
    {
        
        try {
            PreparedStatement s = connection.prepareStatement(
                "SELECT * FROM Customers");
            s.execute();
            return true;
      } catch (SQLException ex) {
            return false;
        }
    }
    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @return the customerId
     */
    public int getCustomerId() {
        return customerId;
    }
    
    protected static int getCurrentCustomerId()
    {
        return (numCustomers);
    }
}
