/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package flightschedulersamatkinssja5408;
import static flightschedulersamatkinssja5408.FlightSchedulerSamAtkinssja5408.connection;
import java.sql.*;
/**
 *
 * @author samatkins
 */
import java.util.ArrayList;
public class Flight {
    private static int numFlights = 0;
    private int flightId;
    private final int NUM_SEATS;
    private ArrayList customers;
    private String name;
    private WaitList waitList;
    
    public Flight(int NUM_SEATS, String name)
    {
        numFlights++;
        this.customers = new ArrayList<Customer>();
        this.NUM_SEATS = NUM_SEATS;
        this.flightId = numFlights;
        this.name = name;
        waitList = new WaitList(this);
        try 
        {
            if(!isTableExisting()) {
                createTable();
            }
            PreparedStatement insertQuery = connection.prepareStatement(
                    "INSERT INTO Flights (name, numSeats)"
                    + " VALUES (?, ?)");
            insertQuery.setString(1, name);
            insertQuery.setString(2, "" + NUM_SEATS);
            insertQuery.execute();
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }
    
    public String getStatus()
    {
        String ret = "";
        
        try
        {
            Connection connection = DriverManager.getConnection(
                FlightSchedulerSamAtkinssja5408.URL, "java", "java");
                PreparedStatement selectQuery = connection.prepareStatement(
                "SELECT name FROM Customers "
                + "WHERE flightId = ? "
                + "ORDER BY name");
            selectQuery.setString(1, "" + getFlightId());
            ResultSet resultSet = selectQuery.executeQuery();
            while (resultSet.next())
            {
                ret += resultSet.getString(1);
                ret += "\n";
            }
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
        return (ret);
    }

    private void createTable() throws SQLException 
    {
        PreparedStatement create = connection.prepareStatement(
                "CREATE TABLE Flights("
                        + "flightId INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1), "
                        + "name LONG VARCHAR, "
                        + "numSeats INTEGER, "
                        + "PRIMARY KEY(flightId))");
        create.execute();
    }
    
    private static boolean isTableExisting() 
    {
        
        try {
            PreparedStatement s = connection.prepareStatement(
                "SELECT * FROM Flights");
            s.execute();
            return true;
      } catch (SQLException ex) {
            return false;
        }
    }
    
    public void addToCustomers(Customer customer)
    {
        customers.add(customer);
    }
    
    public void addToWaitList(Customer customer)
    {
        waitList.addCustomer(customer);
    }
    
    /**
     * @return the flightId
     */
    public int getFlightId() {
        return flightId;
    }

    /**
     * @return the NUM_SEATS
     */
    public int getNUM_SEATS() {
        return NUM_SEATS;
    }

    /**
     * @return the seatsOpen
     */
    public int getSeatsOpen() {
        return (NUM_SEATS - customers.size());
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }
   
}
